{"version":3,"file":"index.js","sources":["../src/build-config.ts","../src/index.ts"],"sourcesContent":["const path = require('path')\n\nexport enum FontFormat {\n  eot = 'eot',\n  woff2 = 'woff2',\n  woff = 'woff',\n  ttf = 'ttf',\n}\n\nexport const FontFormatConfig: {\n  [key: string]: {\n    contentType: string,\n    extensionName: string,\n    formatString: string\n  }\n} = {\n  [FontFormat.eot]: {\n    contentType: 'application/x-font-eot',\n    extensionName: 'eot',\n    formatString: 'embedded-opentype'\n  },\n  [FontFormat.woff2]: {\n    contentType: 'application/x-font-woff2',\n    extensionName: 'woff2',\n    formatString: 'woff2'\n  },\n  [FontFormat.woff]: {\n    contentType: 'application/x-font-woff',\n    extensionName: 'woff',\n    formatString: 'woff'\n  },\n  [FontFormat.ttf]: {\n    contentType: 'application/x-font-ttf',\n    extensionName: 'ttf',\n    formatString: 'truetype'\n  }\n}\n\nexport interface SVGIcon2FontConfig {\n  entry: string,\n  output: string,\n  iconCssFileName?: string,\n  fontName: string,\n  iconPrefix?: string,\n  inline?: boolean,\n  formats?: FontFormat[],\n  startUnicode?: number,\n}\n\nconst defaultConfig: SVGIcon2FontConfig = {\n  entry: path.join(__dirname, '../icons'),\n  output: path.join(__dirname, '../css'),\n  iconCssFileName: 'icon.css',\n  fontName: 'iconfont',\n  iconPrefix: '',\n  inline: true,\n  formats: [FontFormat.ttf],\n  startUnicode: 0xea01,\n}\n\nexport function buildConfig (config: SVGIcon2FontConfig) {\n  return Object.assign({}, defaultConfig, config)\n}\n","import fs from 'fs'\nimport path from 'path'\nimport SVGIcons2SVGFontStream from 'svgicons2svgfont'\nimport svg2ttf from 'svg2ttf'\nimport ttf2eot from 'ttf2eot'\nimport ttf2woff from 'ttf2woff'\nimport ttf2woff2 from 'ttf2woff2'\nimport { buildConfig, SVGIcon2FontConfig, FontFormat, FontFormatConfig } from './build-config'\n\ninterface IconItem {\n  name: string,\n  path: string,\n  unicode: string[],\n  hexCode: string\n}\n\ninterface IconBuffer {\n  ttfBuffer?: Buffer,\n  eotBuffer?: Buffer,\n  woffBuffer?: Buffer,\n  woff2Buffer?: Buffer\n}\n\nconst iconRegexp = /(.svg)$/\n\nclass SVGIcon2Font {\n  config: SVGIcon2FontConfig\n  iconList: IconItem[]\n  iconFontFileList: { [key: string]: Buffer } = {}\n\n  constructor (initinalConfig: SVGIcon2FontConfig) {\n    const config = buildConfig(initinalConfig)\n    this.config = config\n    this.iconList = this.getIconList()\n    this.mkOutputDir()\n  }\n\n  getIconList (): IconItem[] {\n    return fs.readdirSync(this.config.entry).filter((fileName: string) => iconRegexp.test(fileName)).map((fileName: string, i: number) => {\n      let iconCode = this.config.startUnicode! + i;\n      return {\n        name: fileName.replace(iconRegexp, ''),\n        path: path.join(this.config.entry, fileName),\n        unicode: [String.fromCharCode(iconCode)],\n        hexCode: `\\\\${iconCode.toString(16)}`\n      }\n    })\n  }\n\n  mkOutputDir () {\n    if (!fs.existsSync(this.config.output)) {\n      fs.mkdirSync(this.config.output)\n    }\n  }\n\n  async writeFile () {\n    let iconBuffer = await this.generateIconBuffer()\n    fs.writeFileSync(path.join(this.config.output, this.config.iconCssFileName!), this.generateIconFontFace(iconBuffer).concat('\\n\\n', this.generateIconListCssStr(this.iconList), '\\n'))\n    for (let fileName in this.iconFontFileList) {\n      fs.writeFileSync(path.join(this.config.output, fileName), this.iconFontFileList[fileName])\n    }\n  }\n\n  async generateIconBuffer () {\n    let fontFormats = this.config.formats!\n    let svgIconBuffer = await this.generateSvgIcon(this.iconList)\n    let ttfBuffer = this.generateTTFBuffer(svgIconBuffer)\n    let iconBuffer: IconBuffer = {\n      ttfBuffer: fontFormats.includes(FontFormat.ttf) ? ttfBuffer : undefined,\n      eotBuffer: fontFormats.includes(FontFormat.eot) ? this.generateEOTBuffer(ttfBuffer) : undefined,\n      woffBuffer: fontFormats.includes(FontFormat.woff) ? this.generateWoffBuffer(ttfBuffer) : undefined,\n      woff2Buffer: fontFormats.includes(FontFormat.woff2) ? this.generateWoff2Buffer(ttfBuffer) : undefined\n    }\n    return iconBuffer\n  }\n\n  generateIconFontFace (iconBuffer: IconBuffer) {\n    let fontName = this.config.fontName\n    return `@font-face {\n  font-family: \"${fontName}\";\n  ${this.generateIconFontContent(iconBuffer)}\n}\n\n.${fontName}-icon {\n  font-family: \"${fontName}\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}`\n  }\n\n  generateIconListCssStr (iconList: IconItem[]) {\n    let iconPrefix = this.config.iconPrefix ? `${this.config.iconPrefix}-` : ''\n    return iconList.map((icon: IconItem) => {\n      return `.${iconPrefix}${icon.name}::before {\n  content: \"${icon.hexCode}\";\n}`\n    }).join('\\n\\n')\n  }\n\n  generateIconFontContent (iconBuffer: IconBuffer): string {\n    let srcStringBuilder: string[] = []\n    let eotIE9Str: string = ''\n    if (iconBuffer.eotBuffer) {\n      eotIE9Str = `src: ${this.getIconURLContent(FontFormat.eot, iconBuffer.eotBuffer, true)} /* IE9 */;\n  `\n      srcStringBuilder.push(this.getIconURLContent(FontFormat.eot, iconBuffer.eotBuffer))\n    }\n    if (iconBuffer.woff2Buffer) {\n      srcStringBuilder.push(this.getIconURLContent(FontFormat.woff2, iconBuffer.woff2Buffer))\n    }\n    if (iconBuffer.woffBuffer) {\n      srcStringBuilder.push(this.getIconURLContent(FontFormat.woff, iconBuffer.woffBuffer))\n    }\n    if (iconBuffer.ttfBuffer) {\n      srcStringBuilder.push(this.getIconURLContent(FontFormat.ttf, iconBuffer.ttfBuffer))\n    }\n    return `${eotIE9Str}src: ${srcStringBuilder.join(',\\n  ')};`\n  }\n\n  getIconURLContent (fontFormat: FontFormat, buffer: Buffer, withoutFormat?: boolean): string {\n    let urlContent: string = ''\n    if (this.config.inline) {\n      urlContent = `url(data:${FontFormatConfig[fontFormat].contentType};base64,${buffer.toString('base64')})`\n    } else {\n      let iconFontfileName = `${this.config.fontName}.${FontFormatConfig[fontFormat].extensionName}`\n      this.iconFontFileList[iconFontfileName] = buffer\n      urlContent = `url(${iconFontfileName}?t=${new Date().getTime()})`\n    }\n    if (withoutFormat) {\n      return urlContent\n    }\n    return `${urlContent} format('${FontFormatConfig[fontFormat].formatString}')`\n  }\n\n  generateSvgIcon (iconList: IconItem[]): Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n      const svgFontStream = new SVGIcons2SVGFontStream({\n        fontName: this.config.fontName\n      })\n      let generateSvgIconPath = path.join(this.config.output, './__temp__svgicon__.svg')\n      svgFontStream.pipe(fs.createWriteStream(generateSvgIconPath))\n        .on('finish', function () {\n          console.log('Font successfully created!')\n          resolve(fs.readFileSync(generateSvgIconPath))\n          fs.unlinkSync(generateSvgIconPath)\n        })\n        .on('error', function (err: any) {\n          console.log(err);\n          reject(err)\n        });\n\n      iconList.forEach((icon: IconItem) => {\n        const glyph = fs.createReadStream(icon.path) as any\n        glyph.metadata = {\n          name: icon.name,\n          unicode: icon.unicode\n        }\n        svgFontStream.write(glyph)\n      })\n      svgFontStream.end()\n    })\n  }\n\n  generateTTFBuffer (svgIcon: Buffer) {\n    const ttf = svg2ttf(svgIcon.toString('utf8'), {})\n    return Buffer.from(ttf.buffer)\n  }\n\n  generateEOTBuffer (ttfBuffer: Buffer) {\n    const eot = ttf2eot(ttfBuffer)\n    return Buffer.from(eot.buffer)\n  }\n\n  generateWoff2Buffer (ttfBuffer: Buffer) {\n    const woff2 = ttf2woff2(ttfBuffer)\n    return Buffer.from(woff2.buffer)\n  }\n\n  generateWoffBuffer (ttfBuffer: Buffer) {\n    const woff = ttf2woff(ttfBuffer)\n    return Buffer.from(woff.buffer)\n  }\n}\n\nexport function svgIcon2Font (initinalConfig: SVGIcon2FontConfig): Promise<void> {\n  let svgIcon2Font = new SVGIcon2Font(initinalConfig)\n  return svgIcon2Font.writeFile()\n}\n"],"names":["path"],"mappings":"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"}